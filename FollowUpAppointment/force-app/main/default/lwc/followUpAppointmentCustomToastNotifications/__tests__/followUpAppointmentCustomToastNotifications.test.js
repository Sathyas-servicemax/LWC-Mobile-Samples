import { createElement } from "lwc";
import FollowUpAppointmentCustomToastNotifications from "c/followUpAppointmentCustomToastNotifications";

let element;
describe("c-follow-up-appointment-custom-toast-notifications", () => {
  afterEach(() => {
    // The jsdom instance is shared across test cases in a single file so reset the DOM
    while (document.body.firstChild) {
      document.body.removeChild(document.body.firstChild);
    }
  });

  beforeEach(() => {
    element = createElement(
      "c-follow-up-appointment-custom-toast-notifications",
      {
        is: FollowUpAppointmentCustomToastNotifications
      }
    );

    element.timeout = 3000;
    element.sticky = false;
    element.closeModal = jest.fn();
    element.handleClose = jest.fn();
    document.body.appendChild(element);
  });

  it("TODO: test case generated by CLI command, please fill in test logic", () => {
    // Arrange
    element = createElement(
      "c-follow-up-appointment-custom-toast-notifications",
      {
        is: FollowUpAppointmentCustomToastNotifications
      }
    );

    // Act
    document.body.appendChild(element);

    // Assert
    // const div = element.shadowRoot.querySelector('div');
    expect(1).toBe(1);
  });

  // it("test on cancel button event", async () => {
  //     console.log("Element is : " + element.shadowRoot);
  //     const action = element.shadowRoot.querySelector('[data-id="closeBtn"]');
  //     console.log("Action is : " + action);
  //     const spy = jest.spyOn(element, "handleClose");
  //     console.log(spy);
  //     action.dispatchEvent(new Event("click"));

  //     return Promise.resolve().then(() => {
  //       expect(spy).toBeCalledTimes(0);
  //     });
  //   });
});
